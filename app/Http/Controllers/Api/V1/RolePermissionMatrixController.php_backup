<?php

namespace App\Http\Controllers\Api\V1;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
use App\Models\Resource;

class RolePermissionMatrixController extends Controller
{
    protected array $defaultActions = ['create', 'read', 'update', 'delete', 'menu'];

    /**
     * Get matrix of resources + actions + permissions for a given role
     */
    public function index($roleId)
    {
        $role = Role::findOrFail($roleId);

        // Load all resources
        $resources = Resource::all();

        $matrix = [];

        foreach ($resources as $resource) {
            $row = [
                'resource_id' => $resource->id,
                'resource_name' => $resource->name,
                'label' => $resource->label,
                'permissions' => []
            ];

            foreach ($this->defaultActions as $action) {
                $permName = "{$resource->name}.{$action}";
                $has = $role->hasPermissionTo($permName);

                $row['permissions'][] = [
                    'name' => $permName,
                    'action' => $action,
                    'granted' => $has,
                ];
            }

            $matrix[] = $row;
        }

        return response()->json([
            'status' => 'success',
            'data' => [
                'role' => $role->only(['id', 'name']),
                'matrix' => $matrix,
            ]
        ]);
    }

    /**
     * Update permissions (toggle) for a given role
     */
    public function update(Request $request, $roleId)
    {
        $role = Role::findOrFail($roleId);

        $validated = $request->validate([
            'permissions' => 'required|array',
            'permissions.*' => 'string|exists:permissions,name',
        ]);

        $role->syncPermissions($validated['permissions']);

        return response()->json([
            'status' => 'success',
            'message' => 'Role permissions updated successfully.',
        ]);
    }
}
